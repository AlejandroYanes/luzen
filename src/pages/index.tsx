import { type NextPage } from 'next';
import Head from 'next/head';
import { Stack } from '@mantine/core';
import BaseLayout from 'components/BaseLayout';
import IdeaCard from 'components/IdeaCard';
import { prisma } from 'server/db/client';
import type { inferPrismaModelFromQuery } from 'utils/prisma';

interface Props {
  ideas: string;
}

const Home: NextPage<Props> = (props) => {
  const { ideas } = props;
  const parsedIdeas: ListedIdea[] = JSON.parse(ideas);
  const cards = parsedIdeas.map((idea) => <IdeaCard key={idea.id} idea={idea} />);

  return (
    <>
      <Head>
        <title>Bucket List | share your idea</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <Stack spacing="xl" style={{ maxWidth: '700px', margin: '48px auto 0' }}>
          {cards}
        </Stack>
      </BaseLayout>
    </>
  );
};

export default Home;

export async function getStaticProps() {
  const ideas = await listTopIdeas();

  return {
    props: {
      ideas: JSON.stringify(ideas || []),
    },
    // Next.js will attempt to re-generate the page:
    // - When a request comes in
    // - At most once every day
    revalidate: 60 * 60 * 24, // In seconds
  }
}

export type ListedIdea = inferPrismaModelFromQuery<typeof listTopIdeas>[0];

function listTopIdeas() {
  return prisma.idea.findMany({
    take: 5,
    orderBy: { votes: 'desc' },
    where: {
      isDraft: false,
    },
    select: {
      id: true,
      title: true,
      summary: true,
      votes: true,
      postedAt: true,
      author: {
        select: {
          name: true,
          image: true,
        },
      },
    },
  });
}
